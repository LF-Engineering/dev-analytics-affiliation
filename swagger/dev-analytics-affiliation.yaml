---
swagger: '2.0'
info:
  title: Dev Analytics Affiliation API
  version: '1.0'
  description: Dev Analytics Affiliations API
basePath: /v1
paths:
  /health:
    get:
      summary: Health
      operationId: getHealth
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/health"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - health
  /affiliation/{projectSlug}/top_contributors:
    get:
      summary: Get top contributors with their stats
      operationId: getTopContributors
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/get-top-contributors-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - contributors
        - top
        - get
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: from
          in: query
          type: integer
          required: true
          description: the datetime from which to search, e.g 1552790984700
        - name: to
          in: query
          type: integer
          required: true
          description: the datetime from which to search, e.g 1552790984700
        - name: limit
          in: query
          type: integer
          default: 10
          description: The numbers of contributors to return, default 10
        - name: offset
          in: query
          type: integer
          default: 0
          description: the page offset to get something like top 10-20 contributors with offset 1, default 0
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/unaffiliated:
    get:
      summary: Get top unaffiliated users
      operationId: getUnaffiliated
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/get-unaffiliated-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - unaffiliated
        - get
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: top_n
          in: query
          type: integer
          default: 10
          description: top N unaffiliated users, if 0 then return all, default top 10
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/matching_blacklist:
    get:
      summary: Get blacklisted emails
      operationId: getMatchingBlacklist
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/get-matching-blacklist-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - matching_blacklist
        - get
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: q
          in: query
          type: string
          default: ''
          description: If set, it will return emails matching '%q%'
        - name: rows
          in: query
          type: integer
          default: 10
          description: rows per page, if 0 no paging is used and page parameter is ignored
        - name: page
          in: query
          type: integer
          default: 1
          description: If set, it will return rows from a given page
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/matching_blacklist/{email}:
    post:
      summary: Add blacklist email
      operationId: postMatchingBlacklist
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/matching-blacklist-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - matching_blacklist
        - add
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: email
          in: path
          type: string
          required: true
          description: email to be added to blacklist
        - name: Authorization
          in: header
          type: string
          required: true
    delete:
      summary: Delete blacklist email
      operationId: deleteMatchingBlacklist
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/text-status-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - matching_blacklist
        - delete
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: email
          in: path
          type: string
          required: true
          description: email to be added to blacklist
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/list_organizations:
    get:
      summary: Get organizations
      operationId: getListOrganizations
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/get-list-organizations-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - list_organizations
        - get
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: q
          in: query
          type: string
          default: ''
          description: If set, it will return emails matching '%q%'
        - name: rows
          in: query
          type: integer
          default: 10
          description: rows per page, if 0 no paging is used and page parameter is ignored
        - name: page
          in: query
          type: integer
          default: 1
          description: If set, it will return rows from a given page
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/add_organization/{orgName}:
    post:
      summary: Add organization
      operationId: postAddOrganization
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/organization-data-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - add_organization
        - post
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: orgName
          in: path
          type: string
          required: true
          description: Organization name to be added
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/find_organization_by_id/{orgID}:
    get:
      summary: Find organization by ID
      operationId: getFindOrganizationByID
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/organization-data-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - find_organization
        - get
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: orgID
          in: path
          type: integer
          required: true
          description: Organization ID to be found
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/find_organization_by_name/{orgName}:
    get:
      summary: Find organization by Name
      operationId: getFindOrganizationByName
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/organization-data-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - find_organization
        - get
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: orgName
          in: path
          type: string
          required: true
          description: Organization name to be found
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/delete_organization_by_id/{orgID}:
    delete:
      summary: Delete organization by ID
      operationId: deleteOrganization
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/text-status-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - organization
        - delete
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: orgID
          in: path
          type: integer
          required: true
          description: Organization ID to be deleted
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/list_domains:
    get:
      summary: Get organization domains
      operationId: getListOrganizationsDomains
      produces:
        - application/json
      responses:
        "200":
          description: "Success"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/get-list-organizations-domains-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "403":
          $ref: "#/responses/forbidden"
      tags:
        - affiliation
        - list_organization_domains
        - get
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: orgID
          in: query
          type: integer
          default: 0
          description: Organization ID, if you specify 0 it will list data for all organizations
        - name: q
          in: query
          type: string
          default: ''
          description: If set, it will return domains matching '%q%'
        - name: rows
          in: query
          type: integer
          default: 10
          description: rows per page, if 0 no paging is used and page parameter is ignored
        - name: page
          in: query
          type: integer
          default: 1
          description: If set, it will return rows from a given page
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/add_domain/{orgName}/{domain}:
    put:
      summary: Add domain to organization (if not exists) and affiliate all profiles with that domain to this organization
      operationId: putOrgDomain
      produces:
        - application/json
      responses:
        "200":
          description: "Successfully added domain to organization"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/put-org-domain-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "404":
          $ref: "#/responses/not-found"
        "500":
          $ref: "#/responses/internal-server-error"
      tags:
        - affiliation
        - organization
        - domain
        - add
      parameters:
        - name: orgName
          in: path
          type: string
          required: true
          description: Organization name to add domain to (URL encoded)
        - name: domain
          in: path
          type: string
          required: true
          description: Domain to be added
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: overwrite
          in: query
          type: boolean
          default: false
          description: If set, it will overwrite existing affiliations for users with matching domains
        - name: is_top_domain
          in: query
          type: boolean
          default: false
          description: If set, it will set top domain flag to true
        - name: skip_enrollments
          in: query
          type: boolean
          default: false
          description: If set, it will not change/add/remove/touch any enrollments
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/remove_domain/{orgName}/{domain}:
    delete:
      summary: Remove domain from organization
      operationId: deleteOrgDomain
      produces:
        - application/json
      responses:
        "200":
          description: "Successfully added domain to organization"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/text-status-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "404":
          $ref: "#/responses/not-found"
        "500":
          $ref: "#/responses/internal-server-error"
      tags:
        - affiliation
        - organization
        - domain
        - delete
      parameters:
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: orgName
          in: path
          type: string
          required: true
          description: Organization name to remove domain from (URL encoded)
        - name: domain
          in: path
          type: string
          required: true
          description: Domain to be removed
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/merge_unique_identities/{fromUUID}/{toUUID}:
    put:
      summary: Merge Unique Identities fromUUID into toUUID
      operationId: putMergeUniqueIdentities
      produces:
        - application/json
      responses:
        "200":
          description: "Successfully merged unique identities"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/profile-data-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "404":
          $ref: "#/responses/not-found"
        "500":
          $ref: "#/responses/internal-server-error"
      tags:
        - affiliation
        - merge
      parameters:
        - name: fromUUID
          in: path
          type: string
          required: true
          description: Unique Identity/Profile UUID to merge from
        - name: toUUID
          in: path
          type: string
          required: true
          description: Unique Identity/Profile UUID to merge to
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: archive
          in: query
          type: boolean
          default: true
          description: If set, it will archive data so it can be unmerged later
        - name: Authorization
          in: header
          type: string
          required: true
  /affiliation/{projectSlug}/move_identity/{fromID}/{toUUID}:
    put:
      summary: Move identity from fromID to unique identity/profile toUUID
      operationId: putMoveIdentity
      produces:
        - application/json
      responses:
        "200":
          description: "Successfully moved identity"
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: "#/definitions/profile-data-output"
        "400":
          $ref: "#/responses/invalid-request"
        "401":
          $ref: "#/responses/unauthorized"
        "404":
          $ref: "#/responses/not-found"
        "500":
          $ref: "#/responses/internal-server-error"
      tags:
        - affiliation
        - merge
      parameters:
        - name: fromID
          in: path
          type: string
          required: true
          description: Identity ID to merge from
        - name: toUUID
          in: path
          type: string
          required: true
          description: Unique Identity/Profile UUID to merge to
        - name: projectSlug
          in: path
          type: string
          required: true
          description: Project slug URL encoded like 'academy-software-foundation/opencue'
        - name: archive
          in: query
          type: boolean
          default: true
          description: If set, it will attempt to unarchive data
        - name: Authorization
          in: header
          type: string
          required: true
definitions:
  health:
    type: object
    title: Health
    description: Properties for Health
    properties:
      DateTime:
        type: string
        example: "2019-05-29 16:55:53.849593192 +0900 KST m=+12.237337959"
      DevAnalyticsAffiliationService:
        type: string
        example: "Running"
  error-response:
    type: object
    title: Error Response
    description: Standard error format
    properties:
      Code:
        type: string
      Message:
        type: string
  put-org-domain-output:
    title: Put Org Domain Output
    description: Stats and info about adding domain to organization
    type: object
    properties:
      deleted:
        type: string
        example: 12
      added:
        type: string
        example: 8
      info:
        type: string
        example: no such organization Mikrosoft
      user:
        type: string
        example: lukaszgryglicki
      scope:
        type: string
        example: academy-software-foundation/opencue
  profile-data-output:
    title: Profile data output
    description: Profile data
    type: object
    properties:
      uuid:
        type: string
        example: 00024380e0d8d854b42bf505333f245de77bd71d
      name:
        type: string
        x-nullable: true
        example: lukaszgryglicki
      email:
        type: string
        x-nullable: true
        example: lgryglicki@cncf.io
      gender:
        type: string
        example: male
        x-nullable: true
      gender_acc:
        type: integer
        example: 100
        x-nullable: true
      is_bot:
        type: integer
        # database doesn't have null, but we can use to to call EditProfile and skip updating is_bot
        x-nullable: true  
        example: 1
      country_code:
        type: string
        x-nullable: true
        example: PL
  country-data-output:
    title: Country data output
    description: Country data
    type: object
    properties:
      code:
        type: string
        example: PL
      name:
        type: string
        example: Poland
      alpha3:
        type: string
        example: POL
  identity-data-output:
    title: Identity data output
    description: Identity data
    type: object
    properties:
      id:
        type: string
        example: 16fe424acecf8d614d102fc0ece919a22200481d
      uuid:
        type: string
        example: 00024380e0d8d854b42bf505333f245de77bd71d
      source:
        type: string
        example: github
      name:
        type: string
        x-nullable: true
        example: Lukasz Gryglicki
      username:
        type: string
        x-nullable: true
        example: lukaszgryglicki
      email:
        type: string
        x-nullable: true
        example: lgryglicki@cncf.io
      last_modified:
        type: string
        format: date-time
        x-nullable: true
        example: '2019-09-02 03:00:33.000000'
  unique-identity-data-output:
    title: Unique Identity data output
    description: Unique Identity data
    type: object
    properties:
      uuid:
        type: string
        example: 00024380e0d8d854b42bf505333f245de77bd71d
      last_modified:
        type: string
        format: date-time
        x-nullable: true
        example: '2019-09-02 03:00:33.000000'
  enrollment-data-output:
    title: Enrollment data output
    description: Enrollment data
    type: object
    properties:
      id:
        type: integer
        example: 35067
      uuid:
        type: string
        example: 00024380e0d8d854b42bf505333f245de77bd71d
      organization_id:
        type: integer
        example: 33073
      start:
        type: string
        format: date-time
        example: '2019-09-02 03:00:33.000000'
      end:
        type: string
        format: date-time
        example: '2019-09-02 03:00:33.000000'
  organization-data-output:
    title: Organization data output
    description: Organization data
    type: object
    properties:
      id:
        type: integer
        example: 35067
      name:
        type: string
        example: CNCF
  matching-blacklist-output:
    title: Matching blacklist data output
    description: Matching blacklist data
    type: object
    properties:
      excluded:
        type: string
        example: skip@domain.org
  get-matching-blacklist-output:
    title: Matching blacklist data output
    description: Matching blacklist data
    type: object
    properties:
      user:
        type: string
        example: lukaszgryglicki
      scope:
        type: string
        example: academy-software-foundation/opencue
      n_pages:
        type: integer
        example: 10
      page:
        type: integer
        example: 1
      search:
        type: string
        example: 'q=root'
      rows:
        type: integer
        example: 55
      emails:
        type: array
        items:
          $ref: "#/definitions/matching-blacklist-output"
  domain-data-output:
    title: Domain data
    description: Domain data
    type: object
    properties:
      id:
        type: integer
        example: 1000
      organization_id:
        type: integer
        example: 2000
      # this should be called 'domain' but we need to stay compatible
      name:
        type: string
        example: cncf.io
      is_top_domain:
        type: boolean
        example: true
      organization_name:
        type: string
        example: CNCF
  organization-nested-data-output:
    title: Organization data with nested organization domains
    description: Organization data with nested organization domains
    type: object
    properties:
      id:
        type: integer
        example: 1000
      name:
        type: string
        example: CNCF
      domains:
        type: array
        items:
          $ref: "#/definitions/domain-data-output"
  get-list-organizations-output:
    title: List organizations data output
    description: List organizations data
    type: object
    properties:
      user:
        type: string
        example: lukaszgryglicki
      scope:
        type: string
        example: academy-software-foundation/opencue
      n_pages:
        type: integer
        example: 10
      page:
        type: integer
        example: 1
      search:
        type: string
        example: 'q=root'
      n_records:
        type: integer
        example: 55
      rows:
        type: integer
        example: 9
      organizations:
        type: array
        items:
          $ref: "#/definitions/organization-nested-data-output"
  get-list-organizations-domains-output:
    title: List organizations domains data output
    description: List organizations domains data
    type: object
    properties:
      user:
        type: string
        example: lukaszgryglicki
      scope:
        type: string
        example: academy-software-foundation/opencue
      n_pages:
        type: integer
        example: 10
      page:
        type: integer
        example: 1
      search:
        type: string
        example: 'q=root'
      n_records:
        type: integer
        example: 55
      rows:
        type: integer
        example: 9
      domains:
        type: array
        items:
          $ref: "#/definitions/domain-data-output"
  unaffiliated-data-output:
    title: Unaffiliated user data
    description: Unaffiliated user data
    type: object
    properties:
      name:
        type: string
        example: Lukasz Gryglicki
      uuid:
        type: string
        example: 00024380e0d8d854b42bf505333f245de77bd71d
      contributions:
        type: integer
        example: 100
  get-unaffiliated-output:
    title: Top unaffiliated users output
    description: Top unaffiliated users output
    type: object
    properties:
      user:
        type: string
        example: lukaszgryglicki
      scope:
        type: string
        example: academy-software-foundation/opencue
      unaffiliated:
        type: array
        items:
          $ref: "#/definitions/unaffiliated-data-output"
  contributor-stats:
    title: Contributor stats
    description: contributor stats
    type: object
    properties:
      name:
        type: string
        example: Lukasz Gryglicki
      uuid:
        type: string
        example: 00024380e0d8d854b42bf505333f245de77bd71d
      email:
        type: string
        example: lgryglicki@cncf.io
      organization:
        type: string
        example: CNCF
      git:
        type: object
        properties:
          commits:
            type: integer
            example: 123
          lines_of_code_added:
            type: integer
            example: 123
          lines_of_code_removed:
            type: integer
            example: 123
          lines_of_code_changed:
            type: integer
            example: 123
      gerrit:
        type: object
        properties:
          merged_changesets:
            type: integer
            example: 123
          reviews_approved:
            type: integer
            example: 123
      jira:
        type: object
        properties:
          issues_created:
            type: integer
            example: 123
          issues_assigned:
            type: integer
            example: 123
          average_issues_open_days:
            type: number
            example: 123.5
      confluence:
        type: object
        properties:
          pages_created:
            type: integer
            example: 123
          pages_edited:
            type: integer
            example: 123
          comments:
            type: integer
            example: 123
          blog_posts:
            type: integer
            example: 123
          date_since_last_documentation:
            type: number
            example: 123.5
          last_documentation:
            type: string
            example: 2020-03-23T14:09:04.000Z
  get-top-contributors-output:
    title: Top contributors output
    description: Top contributors output
    type: object
    properties:
      user:
        type: string
        example: lukaszgryglicki
      scope:
        type: string
        example: academy-software-foundation/opencue
      contributors:
        type: array
        items:
          $ref: "#/definitions/contributor-stats"
  text-status-output:
    title: Status text for an API call
    description: Status text for an API call
    type: object
    properties:
      text:
        type: string
        example: API call was succesfull
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
responses:
  unauthorized:
    description: Unauthorized
    schema:
      $ref: "#/definitions/error-response"
  invalid-request:
    description: Invalid request
    schema:
      $ref: "#/definitions/error-response"
  forbidden:
    description: Insufficient privilege to execute action.
    schema:
      $ref: "#/definitions/error-response"
  not-found:
    description: Not found.
    schema:
      $ref: "#/definitions/error-response"
  conflict:
    description: Duplicate resource
    schema:
      $ref: "#/definitions/error-response"
  internal-server-error:
    description: Internal server error
    schema:
      $ref: "#/definitions/error-response"
